package paket_MS;

public class Merge_Sort {
	public static void mergeSort(int[] niz, int n) {
	    // Proverava da li je dužina niza manja od 2
	    if (n < 2) {
	        // Ako je dužina niza manja od 2, završava se funkcija
	        return;
	    }
	    // Računa sredinu niza
	    int mid = n / 2;
	    // Kreira se novi niz l dužine mid
	    int[] l = new int[mid];
	    // Kreira se novi niz r dužine n - mid
	    int[] r = new int[n - mid];

	    // Kopira prvu polovinu ulaznog niza u niz l
	    for (int i = 0; i < mid; i++) {
	        l[i] = niz[i];
	    }
	    // Kopira drugu polovinu ulaznog niza u niz r
	    for (int i = mid; i < n; i++) {
	        r[i - mid] = niz[i];
	    }
	    // Rekurzivno poziva mergeSort za prvu polovinu ulaznog niza
	    mergeSort(l, mid);
	    // Rekurzivno poziva mergeSort za drugu polovinu ulaznog niza
	    mergeSort(r, n - mid);

	    // Spaja dva sortirana podniza u jedan sortirani niz
	    merge(niz, l, r, mid, n - mid);
	    
	 // Ispisuje se sortirani niz
        for (int i = 0; i < niz.length; i++) {
            System.out.print(niz[i] + " ");
        }
	}

	public static void merge(
	  int[] niz, int[] l, int[] r, int left, int right) {

	    // Inicijalizacija indeksa za tri niza
	    int i = 0, j = 0, k = 0;
	    // Dok ima elemenata u oba podniza
	    while (i < left && j < right) {
	        // Ukoliko je element iz prvog podniza manji ili jednak elementu iz drugog podniza
	        if (l[i] <= r[j]) {
	            // Dodaje se element iz prvog podniza u rezultujući niz
	        	niz[k++] = l[i++];
	        }
	        else {
	            // Inače dodaje se element iz drugog podniza u rezultujući niz
	        	niz[k++] = r[j++];
	        }
	    }
	    // Kopira preostale elemente iz prvog podniza u rezultujući niz (ako ih ima)
	    while (i < left) {
	    	niz[k++] = l[i++];
	    }
	    // Kopira preostale elemente iz drugog podniza u rezultujući niz (ako ih ima)
	    while (j < right) {
	    	niz[k++] = r[j++];
	    }
	}
	public static void main(String[] args) {
		// Deklaracija i Inicijalizacija početnog niza
				int niz[] = { 2, 5, 7, 8, 1, 3, 6, 4, 9 };
				System.out.println("Niz pre sortiranja: ");
				for (int i = 0; i < niz.length; i++) {
					System.out.print(niz[i] + " ");
				}
				// Poziva se mergeSort metoda za sortiranje niza
		        mergeSort(niz, niz.length);
		        
	}

}
